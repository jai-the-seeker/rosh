(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{167:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return p})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return d}));var a=t(2),r=t(9),c=(t(0),t(186)),o={title:"Php Apache MySql",author:"Jai",tags:["docker","infrastructure"]},p={permalink:"/rosh/blog/2020/06/26/docker",source:"@site/blog\\2020-06-26-docker.md",description:"Installation",date:"2020-06-26T00:00:00.000Z",tags:[{label:"docker",permalink:"/rosh/blog/tags/docker"},{label:"infrastructure",permalink:"/rosh/blog/tags/infrastructure"}],title:"Php Apache MySql",readingTime:2.475,truncated:!1,nextItem:{title:"Welcome",permalink:"/rosh/blog/welcome"}},l=[{value:"Installation",id:"installation",children:[]},{value:"What we have",id:"what-we-have",children:[]},{value:"Let&#39;s create a <code>Dockerfile</code> for PHP",id:"lets-create-a-dockerfile-for-php",children:[]},{value:"Compose <code>docker-compose.yml</code>",id:"compose-docker-composeyml",children:[]},{value:"<code>docker-compose up</code>",id:"docker-compose-up",children:[]},{value:"check our infrastructure",id:"check-our-infrastructure",children:[{value:"<code>php</code>",id:"php",children:[]},{value:"check connection with database",id:"check-connection-with-database",children:[]}]}],i={rightToc:l};function d(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},i,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"installation"},"Installation"),Object(c.b)("p",null,"Download and install ",Object(c.b)("inlineCode",{parentName:"p"},"CE-edition")," of docker and ",Object(c.b)("inlineCode",{parentName:"p"},"docker-compose")," from the official docker website."),Object(c.b)("h2",{id:"what-we-have"},"What we have"),Object(c.b)("p",null,"After fresh installation, we have"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ docker image ls\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nhello-world         latest              fce289e99eb9        15 months ago       1.84kB\n$ docker container ls\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\n$ docker network ls\nNETWORK ID          NAME                DRIVER              SCOPE\nefc1e1ca6409        bridge              bridge              local\n34f81bd2e623        host                host                local\n94d2f826785d        none                null                local\n")),Object(c.b)("h2",{id:"lets-create-a-dockerfile-for-php"},"Let's create a ",Object(c.b)("inlineCode",{parentName:"h2"},"Dockerfile")," for PHP"),Object(c.b)("p",null,"Let us create a ",Object(c.b)("inlineCode",{parentName:"p"},"Dockerfile")," for installation of ",Object(c.b)("inlineCode",{parentName:"p"},"PHP"),".The Dockerfile caters for ",Object(c.b)("inlineCode",{parentName:"p"},"pdo_mysql")," extensions. We will use this file in ",Object(c.b)("inlineCode",{parentName:"p"},"docker-compose.yml")," while carrying out our final installation."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{}),"FROM php:7.4-apache\nRUN apt update && apt-get upgrade -y\nRUN docker-php-ext-install pdo_mysql\nEXPOSE 80\n")),Object(c.b)("h2",{id:"compose-docker-composeyml"},"Compose ",Object(c.b)("inlineCode",{parentName:"h2"},"docker-compose.yml")),Object(c.b)("p",null,"Now lets, create ",Object(c.b)("inlineCode",{parentName:"p"},"docker-compose.yml")," file. Create three folders in the directory containing ",Object(c.b)("inlineCode",{parentName:"p"},"docker-compose.yml")," file."),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"php")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"vol-db")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"vol-php"))),Object(c.b)("p",null,"Copy the ",Object(c.b)("inlineCode",{parentName:"p"},"Dockerfile")," we created previously into the ",Object(c.b)("inlineCode",{parentName:"p"},"php")," forlder. ",Object(c.b)("inlineCode",{parentName:"p"},"vol-db")," and ",Object(c.b)("inlineCode",{parentName:"p"},"vpl-php")," will be used to map the databas and php volumes. We will also create a user for MySql. Username ",Object(c.b)("inlineCode",{parentName:"p"},"devuser")," and password ",Object(c.b)("inlineCode",{parentName:"p"},"devpass"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"version: '3'\nservices:\n\n  db:\n    image: mysql:latest\n    container_name: app-db-mysql\n    environment:\n      MYSQL_ROOT_PASSWORD: tiger\n      MYSQL_DATABASE: myapp_db\n      MYSQL_USER: devuser\n      MYSQL_PASSWORD: devpass\n    volumes:\n      - ./vol-db:/var/lib/mysql/\n    networks:\n      - app-network\n\n  web:\n    build:    \n      context: ./php\n      dockerfile: Dockerfile\n    container_name: app-web-php74\n    depends_on:\n      - db\n    volumes:\n      - ./vol-php:/var/www/html/\n    ports:\n      - 5000:80\n    networks:\n      - app-network\n\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    container_name: app-phpmyadmin\n    depends_on:\n      - db    \n    links: \n      - db:db    \n    environment:      \n      MYSQL_ROOT_PASSWORD: tiger \n    ports:\n      - 5001:80\n    networks:\n      - app-network\n\nnetworks:\n  app-network:\n\n")),Object(c.b)("h2",{id:"docker-compose-up"},Object(c.b)("inlineCode",{parentName:"h2"},"docker-compose up")),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"cd")," into the directory containing ",Object(c.b)("inlineCode",{parentName:"p"},"docker-compose.yml")," file and the run ",Object(c.b)("inlineCode",{parentName:"p"},"docker-compose up")," command. Now, lets check the sate of our docker containers and networks"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'$ docker container ls --format "{{.ID}}: {{.Names}}: {{.Ports}}"\n1f3cb046fe8c: app-web-php74: 0.0.0.0:5000->80/tcp\nc715238c051c: app-phpmyadmin: 0.0.0.0:5001->80/tcp\nb66a4f79e291: app-db-mysql: 3306/tcp, 33060/tcp\n\n$ docker network ls \nNETWORK ID          NAME                          DRIVER              SCOPE\n5e9b89160c36        app-machine_app-network       bridge              local\nefc1e1ca6409        bridge                        bridge              local\na2e9779a2337        docker-files_server-network   bridge              local\n34f81bd2e623        host                          host                local\n94d2f826785d        none                          null                local\n')),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'$ docker network inspect app-machine_app-network \n...\n        "Containers": {\n            "1f3cb046fe8cd8a1c6581d8c582d1acc6854b6af5badf17f6ed395a4f4acd934": {\n                "Name": "app-web-php74",\n                "EndpointID": "4807260f315b9b97cec457e73c5eec78ad70170d0e7b4e34fd30c57448b96e8f",\n                "MacAddress": "02:42:ac:19:00:04",\n                "IPv4Address": "172.25.0.4/16",\n                "IPv6Address": ""\n            },\n            "b66a4f79e2911a56671a2c35543ac2d9bb2a4ef8826f2f426ba6a555ace46ff6": {\n                "Name": "app-db-mysql",\n                "EndpointID": "eff9246fa1ffd075ca5b7a66f2ab5a01177b7607a50b545a9814eda76b1e22e6",\n                "MacAddress": "02:42:ac:19:00:02",\n                "IPv4Address": "172.25.0.2/16",\n                "IPv6Address": ""\n            },\n            "c715238c051c85f3516d55e70079b3fe85bad7a43c6bc9cc64601b81f9650f62": {\n                "Name": "app-phpmyadmin",\n                "EndpointID": "3626814d31c4909c05a41f73bb7afb06fded070d217c9ece38cf297e31626850",\n                "MacAddress": "02:42:ac:19:00:03",\n                "IPv4Address": "172.25.0.3/16",\n                "IPv6Address": ""\n            }\n        },\n...\n')),Object(c.b)("h2",{id:"check-our-infrastructure"},"check our infrastructure"),Object(c.b)("h3",{id:"php"},Object(c.b)("inlineCode",{parentName:"h3"},"php")),Object(c.b)("p",null,"Let's create ",Object(c.b)("inlineCode",{parentName:"p"},"index.php")," file and place it in ",Object(c.b)("inlineCode",{parentName:"p"},"vol-php")," folder"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"<?php\n// Show all information, defaults to INFO_ALL\nphpinfo();\n?>\n")),Object(c.b)("p",null,"In the browser, write ",Object(c.b)("inlineCode",{parentName:"p"},"localhost:5000")," and we should get ",Object(c.b)("inlineCode",{parentName:"p"},"phpinfo")," page. Simiarly, we can check ",Object(c.b)("inlineCode",{parentName:"p"},"phpmyadmin")," page by checking url ",Object(c.b)("inlineCode",{parentName:"p"},"localhost:5001"),"."),Object(c.b)("h3",{id:"check-connection-with-database"},"check connection with database"),Object(c.b)("p",null,"create a file ",Object(c.b)("inlineCode",{parentName:"p"},"conn.php")," in ",Object(c.b)("inlineCode",{parentName:"p"},"vol-php")," folder"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),'<?php\n$servername = "app-db-mysql";\n$username   = "devuser";\n$password   = "devpass";\n\ntry {\n    $conn = new PDO("mysql:host=$servername;dbname=myapp_db", $username, $password);\n    // set the PDO error mode to exception\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n    echo "Connected successfully";\n    }\ncatch(PDOException $e)\n    {\n    echo "Connection failed: " . $e->getMessage();\n    }\n?>\n')),Object(c.b)("p",null,"Now, lets check the connection with database by running ",Object(c.b)("inlineCode",{parentName:"p"},"localhost:5000\\conn.php")))}d.isMDXComponent=!0},186:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return u}));var a=t(0),r=t.n(a);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=r.a.createContext({}),d=function(e){var n=r.a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},b=function(e){var n=d(e.components);return r.a.createElement(i.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},m=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,c=e.originalType,o=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),b=d(t),m=a,u=b["".concat(o,".").concat(m)]||b[m]||s[m]||c;return t?r.a.createElement(u,p(p({ref:n},i),{},{components:t})):r.a.createElement(u,p({ref:n},i))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var c=t.length,o=new Array(c);o[0]=m;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var i=2;i<c;i++)o[i]=t[i];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);