(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{138:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return r})),t.d(a,"metadata",(function(){return i})),t.d(a,"rightToc",(function(){return l})),t.d(a,"default",(function(){return o}));var c=t(2),n=t(6),s=(t(0),t(143)),r={title:"Password Cracking",sidebar_label:"Password Cracking"},i={id:"hunting/password_cracking",title:"Password Cracking",description:"* hash-identifier",source:"@site/docs\\hunting\\password_cracking.md",permalink:"/rosh/docs/hunting/password_cracking",sidebar_label:"Password Cracking",sidebar:"huntingSidebar",previous:{title:"MITRE",permalink:"/rosh/docs/hunting/MITRE"},next:{title:"persistence",permalink:"/rosh/docs/hunting/persistence"}},l=[{value:"findmyhash",id:"findmyhash",children:[]},{value:"example hashes",id:"example-hashes",children:[]},{value:"show delete found password",id:"show-delete-found-password",children:[]},{value:"Mask Based Attack",id:"mask-based-attack",children:[{value:"Setup Mask",id:"setup-mask",children:[]},{value:"Increment Mode",id:"increment-mode",children:[]},{value:"Hashcat Mask Files",id:"hashcat-mask-files",children:[]}]},{value:"Dictionary Attack",id:"dictionary-attack",children:[]},{value:"MD5",id:"md5",children:[]},{value:"HMAC",id:"hmac",children:[]},{value:"CRC32",id:"crc32",children:[]},{value:"SHA1",id:"sha1",children:[]},{value:"NTLM",id:"ntlm",children:[]},{value:"MD5Crypt",id:"md5crypt",children:[]},{value:"Bcrypt",id:"bcrypt",children:[]},{value:"Generate a custom wordlist",id:"generate-a-custom-wordlist",children:[]},{value:"john pot file",id:"john-pot-file",children:[{value:"How to clear crakced hash from database",id:"how-to-clear-crakced-hash-from-database",children:[]}]},{value:"RAR",id:"rar",children:[]},{value:"PKZIP",id:"pkzip",children:[]},{value:"MS word .docx",id:"ms-word-docx",children:[]},{value:"MS word .doc",id:"ms-word-doc",children:[]},{value:"WEP",id:"wep",children:[]}],h={rightToc:l};function o(e){var a=e.components,t=Object(n.a)(e,["components"]);return Object(s.a)("wrapper",Object(c.a)({},h,t,{components:a,mdxType:"MDXLayout"}),Object(s.a)("ul",null,Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#hash-identifier"}),Object(s.a)("inlineCode",{parentName:"a"},"hash-identifier"))),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#hash-online-websites"}),"hash online websites")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#hashcat"}),"Hashcat"),Object(s.a)("ul",{parentName:"li"},Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#example-hashes"}),"example hashes")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#show-delete-found-password"}),"show delete found password")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#mask-based-attack"}),"Mask Based Attack"),Object(s.a)("ul",{parentName:"li"},Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#setup-mask"}),"Setup Mask")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#increment-mode"}),"Increment Mode")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#hashcat-mask-files"}),"Hashcat Mask Files")))),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#dictionary-attack"}),"Dictionary Attack")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#md5"}),"MD5")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#hmac"}),"HMAC")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#crc32"}),"CRC32")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#sha1"}),"SHA1")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#ntlm"}),"NTLM")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#md5Crypt"}),"MD5Crypt")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#bcrypt"}),"Bcrypt"),"  "))),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#wordlists"}),"Wordlists")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#john-the-ripper"}),"john the ripper")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#protected-files"}),"Protected Files"),Object(s.a)("ul",{parentName:"li"},Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#rar"}),"RAR")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#pkzip"}),"PKZIP")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#ms-word-docx"}),"MS word .docx")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"#ms-word-doc"}),"MS word .doc"))))),Object(s.a)("h1",{id:"hash-identifier"},Object(s.a)("inlineCode",{parentName:"h1"},"hash-identifier")),Object(s.a)("ul",null,Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"https://tools.kali.org/password-attacks/hash-identifier"}),"https://tools.kali.org/password-attacks/hash-identifier"))),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{}),"hash-identifier\n")),Object(s.a)("ul",null,Object(s.a)("li",{parentName:"ul"},"Any hash with ",Object(s.a)("inlineCode",{parentName:"li"},"32")," characters is ",Object(s.a)("inlineCode",{parentName:"li"},"MD5"))),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"echo -n 8743b52063cd84097a65d1633f5c74f5 | wc -c\n32\n")),Object(s.a)("h1",{id:"hash-online-websites"},"hash online websites"),Object(s.a)("ul",null,Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"https://hashes.org/search.php"}),"https://hashes.org/search.php")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"https://hashes.com/en/decrypt/hash"}),"https://hashes.com/en/decrypt/hash"))),Object(s.a)("h2",{id:"findmyhash"},"findmyhash"),Object(s.a)("ul",null,Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"https://tools.kali.org/password-attacks/findmyhash"}),"https://tools.kali.org/password-attacks/findmyhash"))),Object(s.a)("p",null,"Specifying the hash algorithm ",Object(s.a)("inlineCode",{parentName:"p"},"MD5"),", attempt to crack the given hash ",Object(s.a)("inlineCode",{parentName:"p"},"-h 098f6bcd4621d373cade4e832627b4f6"),":"),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{}),"root@kali:~# findmyhash MD5 -h 098f6bcd4621d373cade4e832627b4f6\n")),Object(s.a)("h1",{id:"hashcat"},"Hashcat"),Object(s.a)("h2",{id:"example-hashes"},"example hashes"),Object(s.a)("ul",null,Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"https://hashcat.net/wiki/doku.php?id=example_hashes"}),"https://hashcat.net/wiki/doku.php?id=example_hashes"))),Object(s.a)("h2",{id:"show-delete-found-password"},"show delete found password"),Object(s.a)("p",null,"To show an existing cracked password use ",Object(s.a)("inlineCode",{parentName:"p"},"--show")," flag in the end like"),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"hashcat -m 0 -a 0 digest.txt /usr/share/wordlists/rockyou.txt --force --show\n")),Object(s.a)("p",null,"You can disable potfile support completely by using ",Object(s.a)("inlineCode",{parentName:"p"},"--potfile-disable")),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"# find hashcat.potfile\nfind / -type f -name 'hashcat.potfile'\n\n# -n tells echo not to output the trailing newline\necho -n \"\" > /hashcat/hashcat-4.2.1/hashcat.potfile\n")),Object(s.a)("h2",{id:"mask-based-attack"},"Mask Based Attack"),Object(s.a)("h3",{id:"setup-mask"},"Setup Mask"),Object(s.a)("p",null,"Refs"),Object(s.a)("ul",null,Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"https://hashcat.net/wiki/doku.php?id=mask_attack"}),"https://hashcat.net/wiki/doku.php?id=mask_attack")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"https://www.4armed.com/blog/perform-mask-attack-hashcat/"}),"https://www.4armed.com/blog/perform-mask-attack-hashcat/"))),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"command: -a 3 -1 ?l?d ?1?1?1?1?1\nkeyspace: aaaaa - 99999\n")),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"# password length is 5 characters\n# password can only contain characters from this character set:  a-z, 0-9\nhashcat -m 0 -a 3 digest.txt -1 ?l?d ?1?1?1?1?1\n")),Object(s.a)("h3",{id:"increment-mode"},"Increment Mode"),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"# If you take the mask \u201c?l?l?l?l?l?l?l\u201d it will only try passwords of that length. To cycle through all the possible combinations from \n# one to seven, the \u201c--increment argument\u201d can be used.\n?l\n?l?l\n?l?l?l\n?l?l?l?l\n?l?l?l?l?l\n?l?l?l?l?l?l?l\n")),Object(s.a)("p",null,"In order to limit the increment within a specified range use ",Object(s.a)("inlineCode",{parentName:"p"},"--increment-min")," and ",Object(s.a)("inlineCode",{parentName:"p"},"increment-max")," options"),Object(s.a)("h3",{id:"hashcat-mask-files"},"Hashcat Mask Files"),Object(s.a)("p",null,"Let us consider the following scenario for creating a password masking attack:"),Object(s.a)("ul",null,Object(s.a)("li",{parentName:"ul"},"Length between five and eight characters"),Object(s.a)("li",{parentName:"ul"},"Always starts with a capital letter"),Object(s.a)("li",{parentName:"ul"},"Always ends with a number"),Object(s.a)("li",{parentName:"ul"},"The characters in the middle are either lower or upper case")),Object(s.a)("p",null,"For a single entry in a mask file, the following structure is used:"),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{}),"charset1,charset2,charset3,charset4,mask\n")),Object(s.a)("p",null,"It's important to highlight that the charset parameters are optional. So it's possible to create entries in the following format:"),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{}),"charset1,charset2,charset3,charset4,mask\ncharset1,charset2,mask\nmask\n")),Object(s.a)("p",null,"To meet the previous scenario, we can create a mask file containing the following:"),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{}),"?u,?u?l,?d,?1?2?2?2?3\n?u,?u?l,?d,?1?2?2?2?2?3\n?u,?u?l,?d,?1?2?2?2?2?2?3\n")),Object(s.a)("p",null,"Mask files have the file extension of ",Object(s.a)("inlineCode",{parentName:"p"},".hcmask")," and can be used from the command line like below:"),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"hashcat -m 0 -a 3 hash masks.hcmask\n")),Object(s.a)("h2",{id:"dictionary-attack"},"Dictionary Attack"),Object(s.a)("p",null,"Refs:"),Object(s.a)("ul",null,Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",Object(c.a)({parentName:"li"},{href:"https://null-byte.wonderhowto.com/how-to/hack-like-pro-crack-passwords-part-3-using-hashcat-0156543/"}),"https://null-byte.wonderhowto.com/how-to/hack-like-pro-crack-passwords-part-3-using-hashcat-0156543/"))),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"hashcat -m 1800 -a 0 hash.lst wordlist.txt\n")),Object(s.a)("p",null,Object(s.a)("inlineCode",{parentName:"p"},"-m")," 1800 designates the type of hash we are cracking (SHA-512)"),Object(s.a)("p",null,Object(s.a)("inlineCode",{parentName:"p"},"-a 0")," designates a dictionary attack"),Object(s.a)("p",null,Object(s.a)("inlineCode",{parentName:"p"},"hash.lst")," is our input file of hashes"),Object(s.a)("p",null,Object(s.a)("inlineCode",{parentName:"p"},"wordlist.txt")," is the absolute path to our wordlist for this dictionary attack"),Object(s.a)("h2",{id:"md5"},"MD5"),Object(s.a)("ul",null,Object(s.a)("li",{parentName:"ul"},"Any hash with ",Object(s.a)("inlineCode",{parentName:"li"},"32")," characters is ",Object(s.a)("inlineCode",{parentName:"li"},"MD5"))),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"echo -n 8743b52063cd84097a65d1633f5c74f5 | wc -c\n32\n")),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"# -m 0 : MD5 without salt\n\n# MD5 hash:salt \n# cf0b18ddb1a31d05fc73f50fcd29e0a8:salt123\nhashcat -m 10 -a 0 digest.txt password-seclists.txt\n")),Object(s.a)("h2",{id:"hmac"},"HMAC"),Object(s.a)("p",null,"HMAC is a keyed hash (authenticated hash) scheme which ensures that a specific hash value can only be generated if the entity possess a secret key. This scheme can be used to turn any existing hash function into an authenticated hash function which can be then used to check the authenticity of the message in addition to its integrity. HMAC-SHA1 was widely used in online banking security, HTTPS, VPN connections in addition to verify the integrity of the files/binaries. In essence, it is mostly used to protect the data in transit over insecure mediums. "),Object(s.a)("p",null,"A plain-text string and corresponding HMAC-SHA1 digest is provided in digest.txt file. The key used to generate the HMAC-SHA1 is either taken from a key dictionary or by using the key policy. The ",Object(s.a)("inlineCode",{parentName:"p"},"digest.txt")," file and the dictionary file ",Object(s.a)("inlineCode",{parentName:"p"},"password-seclists.txt")," is present in the user's home directory."),Object(s.a)("p",null,"Objective: Recover the secret key."),Object(s.a)("p",null,Object(s.a)("inlineCode",{parentName:"p"},"150\tHMAC-SHA1 (key = $pass)\tc898896f3f70f61bc3fb19bef222aa860e5ea717:1234")," from ",Object(s.a)("a",Object(c.a)({parentName:"p"},{href:"https://hashcat.net/wiki/doku.php?id=example_hashes"}),"example hashes")),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"# \n# hash:plaintext\n# 69f7e54d484620ed6e9d731ca51780a000463fc2:tinkerbell97\nhashcat -m 150 -a 0 digest.txt password-seclists.txt\n")),Object(s.a)("h2",{id:"crc32"},"CRC32"),Object(s.a)("p",null,Object(s.a)("inlineCode",{parentName:"p"},"11500\tCRC32 5\tc762de4a:00000000")," from ",Object(s.a)("a",Object(c.a)({parentName:"p"},{href:"https://hashcat.net/wiki/doku.php?id=example_hashes"}),"example hashes")),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"hashcat -m 11500 -a 0 digest.txt password-seclists.txt\n")),Object(s.a)("h2",{id:"sha1"},"SHA1"),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"hashcat -m 100 digest.txt -a 0 password-seclists.txt\n")),Object(s.a)("h2",{id:"ntlm"},"NTLM"),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"hashcat -m 1000 -a 0 digest.txt password-seclists.txt\n")),Object(s.a)("h2",{id:"md5crypt"},"MD5Crypt"),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"hashcat -m 500 digest.txt -a 0 1000000-password-seclists.txt\n")),Object(s.a)("h2",{id:"bcrypt"},"Bcrypt"),Object(s.a)("p",null,Object(s.a)("inlineCode",{parentName:"p"},"Bcrypt")," is a popular 184-bit password hashing function designed by Niels Provos and David Mazi\xe8res in 1999. It is based on ",Object(s.a)("inlineCode",{parentName:"p"},"blowfish")," cipher.  It is default password hashing algorithm for OpenBSD and other OSes like SUSE Linux."),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"$ cat digest.txt\nDigest: gLX3.eb.sPNURq3Y87bx/eUC9Ysw6mZhi1HAWvy07DWYyw9zYI3.W\nRounds: 4\n")),Object(s.a)("p",null,"This input format is not compatible to Hashcat. So, modify it"),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"$ cat digest.txt\n$2a$04$gLX3.eb.sPNURq3Y87bx/eUC9Ysw6mZhi1HAWvy07DWYyw9zYI3.W\n\nhashcat -m 3200 -a 0 digest.txt password-seclists.txt\n")),Object(s.a)("h1",{id:"wordlists"},"Wordlists"),Object(s.a)("h2",{id:"generate-a-custom-wordlist"},"Generate a custom wordlist"),Object(s.a)("p",null,Object(s.a)("inlineCode",{parentName:"p"},"CeWL")," is a ruby app which spiders a given url to a specified depth, optionally following external links, and returns a list of words which can then be used for password crackers such as John the Ripper.\nRefer : ",Object(s.a)("a",Object(c.a)({parentName:"p"},{href:"https://tools.kali.org/password-attacks/cewl"}),"https://tools.kali.org/password-attacks/cewl")),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"cewl -w createWordlist.txt -m <min password length> https://www.example.com\n")),Object(s.a)("p",null,"Scan to a depth of 2 ",Object(s.a)("inlineCode",{parentName:"p"},"-d 2")," and use a minimum word length of 5 ",Object(s.a)("inlineCode",{parentName:"p"},"-m 5"),", save the words to a file ",Object(s.a)("inlineCode",{parentName:"p"},"-w docswords.txt"),", targeting the given URL (",Object(s.a)("a",Object(c.a)({parentName:"p"},{href:"https://example.com"}),"https://example.com"),"):"),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"cewl -d 2 -m 5 -w docswords.txt https://example.com\n")),Object(s.a)("h1",{id:"john-the-ripper"},"john the ripper"),Object(s.a)("p",null,"John HASH cracking using dictionary"),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"john --wordlist=/user/share/wordlists/rockyou.txt hash.txt\n")),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{}),"MD5\n$ john --format=raw-md5 --wordlist=/usr/share/wordlists/rockyou.txt hash.txt\n\nSHA1\n$ john --format=raw-sha1 hashes.txt\n\nSHA224\n$ john --format=raw-sha224 hashes.txt\n\nSHA512\n$ john --format=raw-sha512 hashes.txt\n")),Object(s.a)("p",null,"Other hash formats supported by John the Ripper: ",Object(s.a)("a",Object(c.a)({parentName:"p"},{href:"http://pentestmonkey.net/cheat-sheet/john-the-ripper-hash-formats"}),"http://pentestmonkey.net/cheat-sheet/john-the-ripper-hash-formats")),Object(s.a)("h2",{id:"john-pot-file"},"john pot file"),Object(s.a)("h3",{id:"how-to-clear-crakced-hash-from-database"},"How to clear crakced hash from database"),Object(s.a)("p",null,"As you can see in the docs ",Object(s.a)("a",Object(c.a)({parentName:"p"},{href:"http://www.openwall.com/john/doc/"}),"http://www.openwall.com/john/doc/"),", John (and almost any good hash cracker) will store the\ncracked hashes in some sort of file/db.\nThis is for performance, this programs will check for already cracked hashes preventing them to spend cpu/gpu time.\nIn the case of John, is located at: ",Object(s.a)("inlineCode",{parentName:"p"},"$JOHN/john.pot")," (",Object(s.a)("inlineCode",{parentName:"p"},"$JOHN")," path depends on the install). You can view the previously\ncracked hashes in the terminal with the command: ",Object(s.a)("inlineCode",{parentName:"p"},"john --show passwd")),Object(s.a)("h1",{id:"protected-files"},"Protected Files"),Object(s.a)("h2",{id:"rar"},"RAR"),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"# extract hashes of .rar file\nrar2john archive.rar > hash\n\ncat hash\n$rar5$16$50d889a2c6441510dd0c8ab76dde4fd6$15$697757daca178f6f88135491827bdad6$8$e13f0c4d2f8286d5\n\njohn --wordlist=password-seclists.txt hash\nhashcat -m 13000 hash -a 0 password-seclists.txt\n")),Object(s.a)("h2",{id:"pkzip"},"PKZIP"),Object(s.a)("p",null,"We have to use JTR because at the time of writing this document, PKZIP is not supported by hashcat"),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"# extract hashes of .zip file\nzip2john archive.zip > hash\n\ncat hash\narchive.zip:$pkzip2$1*2*2*0*2d*21*c10509e*0*3f*0*2d*0c10*360a*f5e92c2b27b0f6ece97e6030ccb3338eb42b7c5ec117f4b49bfb0232e1e45e1673c6ef2fb8c952ba2410a770aa*$/pkzip2$:::::archive.zip\n\njohn --wordlist=1000000-password-seclists.txt hash\n")),Object(s.a)("h2",{id:"ms-word-docx"},"MS word .docx"),Object(s.a)("p",null,"MS Office 2013"),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"# extract hashes of .docx file\noffice2john MS_Word_Document.docx > hash\n\n$ cat hash\nMS_Word_Document.docx:$office$*2013*100000*256*16*ff2563844faca58a12fc42c5036f9cf8*ffaf52db903dbcb6ac2db4bab6d343ab*c237403ec97e5f68b7be3324a8633c9ff95e0bb44b1efcf798c70271a54336a2\n\njohn --wordlist=password-seclists.txt hash\n")),Object(s.a)("p",null,"Using Hashcat"),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"# Make the hashes compatible with hashcat\ncat hash\n$office$*2013*100000*256*16*ff2563844faca58a12fc42c5036f9cf8*ffaf52db903dbcb6ac2db4bab6d343ab*c237403ec97e5f68b7be3324a8633c9ff95e0bb44b1efcf798c70271a54336a2\n\nhashcat -m 9600 hash -a 0 password-seclists.txt\n")),Object(s.a)("h2",{id:"ms-word-doc"},"MS word .doc"),Object(s.a)("p",null,"MS Office 1997-2003"),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"office2john MS_Word_Document_97_2003.doc > hash\n\n$ cat hash\nMS_Word_Document_97_2003.doc:$oldoffice$4*f1efb1c529cff63cb08cf439df074c5d*9256d6abe8325534e7dae97f9f5967d9*8f015d410f45812c5e554ab7a147f1d9285ff6ea:::::MS_Word_Document_97_2003.doc\n\njohn --wordlist=password-seclists.txt hash\n")),Object(s.a)("p",null,"Using Hashcat"),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"# Make the hashes compatible with hashcat\ncat hash\n$oldoffice$4*f1efb1c529cff63cb08cf439df074c5d*9256d6abe8325534e7dae97f9f5967d9*8f015d410f45812c5e554ab7a147f1d9285ff6ea\n\nhashcat -m 9800 hash -a 0 password-seclists.txt\n")),Object(s.a)("h1",{id:"wifi"},"WiFi"),Object(s.a)("h2",{id:"wep"},"WEP"),Object(s.a)("pre",null,Object(s.a)("code",Object(c.a)({parentName:"pre"},{className:"language-sh"}),"# -b <bssid> : target selection: access point's MAC\naircrack-ng -b 00:21:91:d2:8e:25 WEP-Cracking.cap\n")))}o.isMDXComponent=!0},143:function(e,a,t){"use strict";t.d(a,"a",(function(){return b}));var c=t(0),n=t.n(c);function s(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);a&&(c=c.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,c)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){s(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,c,n=function(e,a){if(null==e)return{};var t,c,n={},s=Object.keys(e);for(c=0;c<s.length;c++)t=s[c],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(c=0;c<s.length;c++)t=s[c],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var h=n.a.createContext({}),o=function(e){var a=n.a.useContext(h),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.a.createElement(n.a.Fragment,{},a)}},d=n.a.forwardRef((function(e,a){var t=e.components,c=e.mdxType,s=e.originalType,r=e.parentName,h=l(e,["components","mdxType","originalType","parentName"]),d=o(t),b=c,m=d["".concat(r,".").concat(b)]||d[b]||p[b]||s;return t?n.a.createElement(m,i(i({ref:a},h),{},{components:t})):n.a.createElement(m,i({ref:a},h))}));function b(e,a){var t=arguments,c=a&&a.mdxType;if("string"==typeof e||c){var s=t.length,r=new Array(s);r[0]=d;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i.mdxType="string"==typeof e?e:c,r[1]=i;for(var h=2;h<s;h++)r[h]=t[h];return n.a.createElement.apply(null,r)}return n.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);