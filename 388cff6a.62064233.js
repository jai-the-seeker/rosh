(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{101:function(e,n,t){"use strict";t.d(n,"a",(function(){return f})),t.d(n,"b",(function(){return m}));var r=t(0),o=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),u=function(e){var n=o.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},f=function(e){var n=u(e.components);return o.a.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},d=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=u(t),d=r,m=f["".concat(c,".").concat(d)]||f[d]||p[d]||i;return t?o.a.createElement(m,a(a({ref:n},l),{},{components:t})):o.a.createElement(m,a({ref:n},l))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,c=new Array(i);c[0]=d;var a={};for(var s in n)hasOwnProperty.call(n,s)&&(a[s]=n[s]);a.originalType=e,a.mdxType="string"==typeof e?e:r,c[1]=a;for(var l=2;l<i;l++)c[l]=t[l];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},65:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return a})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return u}));var r=t(2),o=t(6),i=(t(0),t(101)),c={title:"Forensics",sidebar_label:"Forensics"},a={unversionedId:"hunting/forensics",id:"hunting/forensics",isDocsHomePage:!1,title:"Forensics",description:"Forensics",source:"@site/docs\\hunting\\forensics.md",permalink:"/rosh/docs/hunting/forensics",sidebar_label:"Forensics",sidebar:"huntingSidebar",previous:{title:"Web Recon",permalink:"/rosh/docs/hunting/web/web_recon"},next:{title:"linux_deb_backdoor",permalink:"/rosh/docs/hunting/linux_deb_backdoor"}},s=[{value:"Basic Commands",id:"basic-commands",children:[]}],l={rightToc:s};function u(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"forensics"},"Forensics"),Object(i.b)("h2",{id:"basic-commands"},"Basic Commands"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-sh"}),"# check the format type for the given image.\nimg_stat evidence.img\n\n# check the file system type and the last mounted directory of the given image.\nfsstat evidence.img\n\n# list all the directories on the root directory of the disk image.\nfls evidence.img\n\n# extract the file flag.txt from the disk image file. \n# Here 16 is the inode number of the file flag.txt on the image, \n# which can be obtained from the fls command above.\nicat evidence.img 16\n\n")))}u.isMDXComponent=!0}}]);